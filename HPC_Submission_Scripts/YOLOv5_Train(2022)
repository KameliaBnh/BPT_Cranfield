#!/bin/bash
##
## GPU submission script for PBS on CRESCENT
## -----------------------------------------
##
## Follow the 6 steps below to configure your job
## 
## STEP 1:
##
## Enter a job name after the -N on the line below:
##
#PBS -N Yolov5_Train_2022
##
## STEP 2:
##
## Select the number of cpus/cores and GPUs required by modifying the #PBS -l select line below
##
## The Maximum value for ncpus is 8 and mpiprocs MUST be the same value as ncpus.
## The Maximum value for ngpus is 1 
## e.g.	 1 GPU and 8 CPUs : select=1:ncpus=8:mpiprocs=8;ngpus=1
##
#PBS -l select=1:ncpus=8:mpiprocs=8:ngpus=1
##
## STEP 3:
##
## There is only one queue for GPU jobs as defined in the #PBS -q line below
##
#PBS -q gpu
##
## The default walltime in the gpu queue is one day(24 hours)
## The maximum walltime in the gpu queue is five days(120 hours)
## In order to increase the walltime modify the #PBS -l walltime line below
## and remove one of the leading # characters 
##
#PBS -l walltime=120:00:00
##
## STEP 4:
##
## Replace the hpc@cranfield.ac.uk email address
## with your Cranfield email address on the #PBS -M line below:
## Your email address is NOT your username
##
#PBS -m abe 
#PBS -M hpc@cranfield.ac.uk
##
## ====================================
## DO NOT CHANGE THE LINES BETWEEN HERE
## ====================================
#PBS -j oe
#PBS -v "CUDA_VISIBLE_DEVICES="
#PBS -W sandbox=PRIVATE
#PBS -k n
ln -s $PWD $PBS_O_WORKDIR/$PBS_JOBID
## Allocated gpu(s)
echo CUDA_VISIBLE_DEVICES=$CUDA_VISIBLE_DEVICES
## Change to working directory
cd $PBS_O_WORKDIR
## Calculate number of CPUs and GPUs
export cpus=`cat $PBS_NODEFILE | wc -l`
export gpus=`echo $CUDA_VISIBLE_DEVICES|awk -F"," '{print NF}'`
## ========
## AND HERE
## ========
##
## STEP 5: 
## 
##  Load the default application environment
##  For a specific version add the version number, e.g.
##module load CUDA/8.0.44
##
module load CUDA
##
## STEP 6: 
## 
## Run gpu application 
##
## Put correct parameters and cuda application in the line below:
##
####################################################################

## ==================================================================================
## YOLOv5 Training 2022 dataset


module load git/2.23.0-GCCcore-8.3.0-nodocs 


##############################
# activate conda environment #
# in this case ./yolo_env/   #
##############################
source .bashrc
conda activate ./conda_env/


###############################
# train the model 2022        #
# with default hyperparameter #
###############################

## Make sure to set the path to train, test and val set to that of 2022 dataset in data.yaml file ##

python ./yolov5/train.py --img 640 --batch 32 --epochs 150 --data /path/to/data.yaml --weights /path/to/save/weight/yolov5x.pt --name 2022_Run --device cpu &> /path/to/save/logfile_run10.log


## ==================================================================================

####################################################################
## Tidy up the log directory
## DO NOT CHANGE THE LINE BELOW
## ============================
rm $PBS_O_WORKDIR/$PBS_JOBID
#
